// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PredictionStore should create correct object 1`] = `
Object {
  "competitors": Array [
    Object {
      "abbreviation": "NEW",
      "country": "England",
      "country_code": "ENG",
      "id": "sr:competitor:39",
      "name": "Newcastle United",
      "qualifier": "home",
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": 2,
          "name": "PredictionStore@1.matches[..].competitors[..].keys",
          "observers": Set {},
        },
        "name": "PredictionStore@1.matches[..].competitors[..]",
        "pendingKeys": Map {
          "$$typeof" => false,
          "nodeType" => false,
          "@@__IMMUTABLE_ITERABLE__@@" => false,
          "@@__IMMUTABLE_RECORD__@@" => false,
          "_isMockFunction" => false,
          "toJSON" => false,
        },
        "proxy": [Circular],
        "target": Object {
          "abbreviation": "NEW",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:39",
          "name": "Newcastle United",
          "qualifier": "home",
          Symbol(mobx administration): [Circular],
        },
        "values": Map {
          "id" => "sr:competitor:39",
          "name" => "Newcastle United",
          "country" => "England",
          "country_code" => "ENG",
          "abbreviation" => "NEW",
          "qualifier" => "home",
        },
      },
    },
    Object {
      "abbreviation": "TOT",
      "country": "England",
      "country_code": "ENG",
      "id": "sr:competitor:33",
      "name": "Tottenham Hotspur",
      "qualifier": "away",
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": 2,
          "name": "PredictionStore@1.matches[..].competitors[..].keys",
          "observers": Set {},
        },
        "name": "PredictionStore@1.matches[..].competitors[..]",
        "pendingKeys": Map {
          "$$typeof" => false,
          "nodeType" => false,
          "@@__IMMUTABLE_ITERABLE__@@" => false,
          "@@__IMMUTABLE_RECORD__@@" => false,
          "_isMockFunction" => false,
          "toJSON" => false,
        },
        "proxy": [Circular],
        "target": Object {
          "abbreviation": "TOT",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:33",
          "name": "Tottenham Hotspur",
          "qualifier": "away",
          Symbol(mobx administration): [Circular],
        },
        "values": Map {
          "id" => "sr:competitor:33",
          "name" => "Tottenham Hotspur",
          "country" => "England",
          "country_code" => "ENG",
          "abbreviation" => "TOT",
          "qualifier" => "away",
        },
      },
    },
  ],
  "id": "sr:match:14735959",
  "scheduled": "2018-08-11T11:30:00+00:00",
  "season": Object {
    "end_date": "2019-05-13",
    "id": "sr:season:54571",
    "name": "Premier League 18/19",
    "start_date": "2018-08-10",
    "tournament_id": "sr:tournament:17",
    "year": "18/19",
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": 2,
        "name": "PredictionStore@1.matches[..].season.keys",
        "observers": Set {},
      },
      "name": "PredictionStore@1.matches[..].season",
      "pendingKeys": Map {
        "$$typeof" => false,
        "nodeType" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        "end_date": "2019-05-13",
        "id": "sr:season:54571",
        "name": "Premier League 18/19",
        "start_date": "2018-08-10",
        "tournament_id": "sr:tournament:17",
        "year": "18/19",
        Symbol(mobx administration): [Circular],
      },
      "values": Map {
        "id" => "sr:season:54571",
        "name" => "Premier League 18/19",
        "start_date" => "2018-08-10",
        "end_date" => "2019-05-13",
        "year" => "18/19",
        "tournament_id" => "sr:tournament:17",
      },
    },
  },
  "start_time_tbd": false,
  "status": "not_started",
  "tournament": Object {
    "category": Object {
      "country_code": "ENG",
      "id": "sr:category:1",
      "name": "England",
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": 2,
          "name": "PredictionStore@1.matches[..].tournament.category.keys",
          "observers": Set {},
        },
        "name": "PredictionStore@1.matches[..].tournament.category",
        "pendingKeys": Map {
          "$$typeof" => false,
          "nodeType" => false,
          "@@__IMMUTABLE_ITERABLE__@@" => false,
          "@@__IMMUTABLE_RECORD__@@" => false,
          "_isMockFunction" => false,
          "toJSON" => false,
        },
        "proxy": [Circular],
        "target": Object {
          "country_code": "ENG",
          "id": "sr:category:1",
          "name": "England",
          Symbol(mobx administration): [Circular],
        },
        "values": Map {
          "id" => "sr:category:1",
          "name" => "England",
          "country_code" => "ENG",
        },
      },
    },
    "id": "sr:tournament:17",
    "name": "Premier League",
    "sport": Object {
      "id": "sr:sport:1",
      "name": "Soccer",
      Symbol(mobx administration): ObservableObjectAdministration$$1 {
        "defaultEnhancer": [Function],
        "keysAtom": Atom$$1 {
          "diffValue": 0,
          "isBeingObserved": false,
          "isPendingUnobservation": false,
          "lastAccessedBy": 0,
          "lowestObserverState": 2,
          "name": "PredictionStore@1.matches[..].tournament.sport.keys",
          "observers": Set {},
        },
        "name": "PredictionStore@1.matches[..].tournament.sport",
        "pendingKeys": Map {
          "$$typeof" => false,
          "nodeType" => false,
          "@@__IMMUTABLE_ITERABLE__@@" => false,
          "@@__IMMUTABLE_RECORD__@@" => false,
          "_isMockFunction" => false,
          "toJSON" => false,
        },
        "proxy": [Circular],
        "target": Object {
          "id": "sr:sport:1",
          "name": "Soccer",
          Symbol(mobx administration): [Circular],
        },
        "values": Map {
          "id" => "sr:sport:1",
          "name" => "Soccer",
        },
      },
    },
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": 2,
        "name": "PredictionStore@1.matches[..].tournament.keys",
        "observers": Set {},
      },
      "name": "PredictionStore@1.matches[..].tournament",
      "pendingKeys": Map {
        "$$typeof" => false,
        "nodeType" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        "category": Object {
          "country_code": "ENG",
          "id": "sr:category:1",
          "name": "England",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.category.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.category",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:category:1",
              "name" => "England",
              "country_code" => "ENG",
            },
          },
        },
        "id": "sr:tournament:17",
        "name": "Premier League",
        "sport": Object {
          "id": "sr:sport:1",
          "name": "Soccer",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.sport.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.sport",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:sport:1",
              "name" => "Soccer",
            },
          },
        },
        Symbol(mobx administration): [Circular],
      },
      "values": Map {
        "id" => "sr:tournament:17",
        "name" => "Premier League",
        "sport" => Object {
          "id": "sr:sport:1",
          "name": "Soccer",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.sport.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.sport",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:sport:1",
              "name" => "Soccer",
            },
          },
        },
        "category" => Object {
          "country_code": "ENG",
          "id": "sr:category:1",
          "name": "England",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.category.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.category",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:category:1",
              "name" => "England",
              "country_code" => "ENG",
            },
          },
        },
      },
    },
  },
  "tournament_round": Object {
    "number": 1,
    "type": "group",
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": 2,
        "name": "PredictionStore@1.matches[..].tournament_round.keys",
        "observers": Set {},
      },
      "name": "PredictionStore@1.matches[..].tournament_round",
      "pendingKeys": Map {
        "$$typeof" => false,
        "nodeType" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        "number": 1,
        "type": "group",
        Symbol(mobx administration): [Circular],
      },
      "values": Map {
        "type" => "group",
        "number" => 1,
      },
    },
  },
  "venue": Object {
    "capacity": 52338,
    "city_name": "Newcastle upon Tyne",
    "country_code": "ENG",
    "country_name": "England",
    "id": "sr:venue:765",
    "map_coordinates": "54.975033,-1.615061",
    "name": "St James' Park",
    Symbol(mobx administration): ObservableObjectAdministration$$1 {
      "defaultEnhancer": [Function],
      "keysAtom": Atom$$1 {
        "diffValue": 0,
        "isBeingObserved": false,
        "isPendingUnobservation": false,
        "lastAccessedBy": 0,
        "lowestObserverState": 2,
        "name": "PredictionStore@1.matches[..].venue.keys",
        "observers": Set {},
      },
      "name": "PredictionStore@1.matches[..].venue",
      "pendingKeys": Map {
        "$$typeof" => false,
        "nodeType" => false,
        "@@__IMMUTABLE_ITERABLE__@@" => false,
        "@@__IMMUTABLE_RECORD__@@" => false,
        "_isMockFunction" => false,
        "toJSON" => false,
      },
      "proxy": [Circular],
      "target": Object {
        "capacity": 52338,
        "city_name": "Newcastle upon Tyne",
        "country_code": "ENG",
        "country_name": "England",
        "id": "sr:venue:765",
        "map_coordinates": "54.975033,-1.615061",
        "name": "St James' Park",
        Symbol(mobx administration): [Circular],
      },
      "values": Map {
        "id" => "sr:venue:765",
        "name" => "St James' Park",
        "capacity" => 52338,
        "city_name" => "Newcastle upon Tyne",
        "country_name" => "England",
        "map_coordinates" => "54.975033,-1.615061",
        "country_code" => "ENG",
      },
    },
  },
  Symbol(mobx administration): ObservableObjectAdministration$$1 {
    "defaultEnhancer": [Function],
    "keysAtom": Atom$$1 {
      "diffValue": 0,
      "isBeingObserved": false,
      "isPendingUnobservation": false,
      "lastAccessedBy": 0,
      "lowestObserverState": 2,
      "name": "PredictionStore@1.matches[..].keys",
      "observers": Set {},
    },
    "name": "PredictionStore@1.matches[..]",
    "pendingKeys": Map {
      "$$typeof" => false,
      "nodeType" => false,
      "@@__IMMUTABLE_ITERABLE__@@" => false,
      "@@__IMMUTABLE_RECORD__@@" => false,
      "_isMockFunction" => false,
      "toJSON" => false,
    },
    "proxy": [Circular],
    "target": Object {
      "competitors": Array [
        Object {
          "abbreviation": "NEW",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:39",
          "name": "Newcastle United",
          "qualifier": "home",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].competitors[..].keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].competitors[..]",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "abbreviation": "NEW",
              "country": "England",
              "country_code": "ENG",
              "id": "sr:competitor:39",
              "name": "Newcastle United",
              "qualifier": "home",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:competitor:39",
              "name" => "Newcastle United",
              "country" => "England",
              "country_code" => "ENG",
              "abbreviation" => "NEW",
              "qualifier" => "home",
            },
          },
        },
        Object {
          "abbreviation": "TOT",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:33",
          "name": "Tottenham Hotspur",
          "qualifier": "away",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].competitors[..].keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].competitors[..]",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "abbreviation": "TOT",
              "country": "England",
              "country_code": "ENG",
              "id": "sr:competitor:33",
              "name": "Tottenham Hotspur",
              "qualifier": "away",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:competitor:33",
              "name" => "Tottenham Hotspur",
              "country" => "England",
              "country_code" => "ENG",
              "abbreviation" => "TOT",
              "qualifier" => "away",
            },
          },
        },
      ],
      "id": "sr:match:14735959",
      "scheduled": "2018-08-11T11:30:00+00:00",
      "season": Object {
        "end_date": "2019-05-13",
        "id": "sr:season:54571",
        "name": "Premier League 18/19",
        "start_date": "2018-08-10",
        "tournament_id": "sr:tournament:17",
        "year": "18/19",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].season.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].season",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "end_date": "2019-05-13",
            "id": "sr:season:54571",
            "name": "Premier League 18/19",
            "start_date": "2018-08-10",
            "tournament_id": "sr:tournament:17",
            "year": "18/19",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:season:54571",
            "name" => "Premier League 18/19",
            "start_date" => "2018-08-10",
            "end_date" => "2019-05-13",
            "year" => "18/19",
            "tournament_id" => "sr:tournament:17",
          },
        },
      },
      "start_time_tbd": false,
      "status": "not_started",
      "tournament": Object {
        "category": Object {
          "country_code": "ENG",
          "id": "sr:category:1",
          "name": "England",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.category.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.category",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:category:1",
              "name" => "England",
              "country_code" => "ENG",
            },
          },
        },
        "id": "sr:tournament:17",
        "name": "Premier League",
        "sport": Object {
          "id": "sr:sport:1",
          "name": "Soccer",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.sport.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.sport",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:sport:1",
              "name" => "Soccer",
            },
          },
        },
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].tournament.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].tournament",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "category": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.category.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.category",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "country_code": "ENG",
                  "id": "sr:category:1",
                  "name": "England",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:category:1",
                  "name" => "England",
                  "country_code" => "ENG",
                },
              },
            },
            "id": "sr:tournament:17",
            "name": "Premier League",
            "sport": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.sport.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.sport",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "id": "sr:sport:1",
                  "name": "Soccer",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:sport:1",
                  "name" => "Soccer",
                },
              },
            },
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:tournament:17",
            "name" => "Premier League",
            "sport" => Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.sport.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.sport",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "id": "sr:sport:1",
                  "name": "Soccer",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:sport:1",
                  "name" => "Soccer",
                },
              },
            },
            "category" => Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.category.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.category",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "country_code": "ENG",
                  "id": "sr:category:1",
                  "name": "England",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:category:1",
                  "name" => "England",
                  "country_code" => "ENG",
                },
              },
            },
          },
        },
      },
      "tournament_round": Object {
        "number": 1,
        "type": "group",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].tournament_round.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].tournament_round",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "number": 1,
            "type": "group",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "type" => "group",
            "number" => 1,
          },
        },
      },
      "venue": Object {
        "capacity": 52338,
        "city_name": "Newcastle upon Tyne",
        "country_code": "ENG",
        "country_name": "England",
        "id": "sr:venue:765",
        "map_coordinates": "54.975033,-1.615061",
        "name": "St James' Park",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].venue.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].venue",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "capacity": 52338,
            "city_name": "Newcastle upon Tyne",
            "country_code": "ENG",
            "country_name": "England",
            "id": "sr:venue:765",
            "map_coordinates": "54.975033,-1.615061",
            "name": "St James' Park",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:venue:765",
            "name" => "St James' Park",
            "capacity" => 52338,
            "city_name" => "Newcastle upon Tyne",
            "country_name" => "England",
            "map_coordinates" => "54.975033,-1.615061",
            "country_code" => "ENG",
          },
        },
      },
      Symbol(mobx administration): [Circular],
    },
    "values": Map {
      "id" => "sr:match:14735959",
      "scheduled" => "2018-08-11T11:30:00+00:00",
      "start_time_tbd" => false,
      "status" => "not_started",
      "tournament_round" => Object {
        "number": 1,
        "type": "group",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].tournament_round.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].tournament_round",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "number": 1,
            "type": "group",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "type" => "group",
            "number" => 1,
          },
        },
      },
      "season" => Object {
        "end_date": "2019-05-13",
        "id": "sr:season:54571",
        "name": "Premier League 18/19",
        "start_date": "2018-08-10",
        "tournament_id": "sr:tournament:17",
        "year": "18/19",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].season.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].season",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "end_date": "2019-05-13",
            "id": "sr:season:54571",
            "name": "Premier League 18/19",
            "start_date": "2018-08-10",
            "tournament_id": "sr:tournament:17",
            "year": "18/19",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:season:54571",
            "name" => "Premier League 18/19",
            "start_date" => "2018-08-10",
            "end_date" => "2019-05-13",
            "year" => "18/19",
            "tournament_id" => "sr:tournament:17",
          },
        },
      },
      "tournament" => Object {
        "category": Object {
          "country_code": "ENG",
          "id": "sr:category:1",
          "name": "England",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.category.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.category",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:category:1",
              "name" => "England",
              "country_code" => "ENG",
            },
          },
        },
        "id": "sr:tournament:17",
        "name": "Premier League",
        "sport": Object {
          "id": "sr:sport:1",
          "name": "Soccer",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].tournament.sport.keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].tournament.sport",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:sport:1",
              "name" => "Soccer",
            },
          },
        },
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].tournament.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].tournament",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "category": Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.category.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.category",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "country_code": "ENG",
                  "id": "sr:category:1",
                  "name": "England",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:category:1",
                  "name" => "England",
                  "country_code" => "ENG",
                },
              },
            },
            "id": "sr:tournament:17",
            "name": "Premier League",
            "sport": Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.sport.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.sport",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "id": "sr:sport:1",
                  "name": "Soccer",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:sport:1",
                  "name" => "Soccer",
                },
              },
            },
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:tournament:17",
            "name" => "Premier League",
            "sport" => Object {
              "id": "sr:sport:1",
              "name": "Soccer",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.sport.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.sport",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "id": "sr:sport:1",
                  "name": "Soccer",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:sport:1",
                  "name" => "Soccer",
                },
              },
            },
            "category" => Object {
              "country_code": "ENG",
              "id": "sr:category:1",
              "name": "England",
              Symbol(mobx administration): ObservableObjectAdministration$$1 {
                "defaultEnhancer": [Function],
                "keysAtom": Atom$$1 {
                  "diffValue": 0,
                  "isBeingObserved": false,
                  "isPendingUnobservation": false,
                  "lastAccessedBy": 0,
                  "lowestObserverState": 2,
                  "name": "PredictionStore@1.matches[..].tournament.category.keys",
                  "observers": Set {},
                },
                "name": "PredictionStore@1.matches[..].tournament.category",
                "pendingKeys": Map {
                  "$$typeof" => false,
                  "nodeType" => false,
                  "@@__IMMUTABLE_ITERABLE__@@" => false,
                  "@@__IMMUTABLE_RECORD__@@" => false,
                  "_isMockFunction" => false,
                  "toJSON" => false,
                },
                "proxy": [Circular],
                "target": Object {
                  "country_code": "ENG",
                  "id": "sr:category:1",
                  "name": "England",
                  Symbol(mobx administration): [Circular],
                },
                "values": Map {
                  "id" => "sr:category:1",
                  "name" => "England",
                  "country_code" => "ENG",
                },
              },
            },
          },
        },
      },
      "competitors" => Array [
        Object {
          "abbreviation": "NEW",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:39",
          "name": "Newcastle United",
          "qualifier": "home",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].competitors[..].keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].competitors[..]",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "abbreviation": "NEW",
              "country": "England",
              "country_code": "ENG",
              "id": "sr:competitor:39",
              "name": "Newcastle United",
              "qualifier": "home",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:competitor:39",
              "name" => "Newcastle United",
              "country" => "England",
              "country_code" => "ENG",
              "abbreviation" => "NEW",
              "qualifier" => "home",
            },
          },
        },
        Object {
          "abbreviation": "TOT",
          "country": "England",
          "country_code": "ENG",
          "id": "sr:competitor:33",
          "name": "Tottenham Hotspur",
          "qualifier": "away",
          Symbol(mobx administration): ObservableObjectAdministration$$1 {
            "defaultEnhancer": [Function],
            "keysAtom": Atom$$1 {
              "diffValue": 0,
              "isBeingObserved": false,
              "isPendingUnobservation": false,
              "lastAccessedBy": 0,
              "lowestObserverState": 2,
              "name": "PredictionStore@1.matches[..].competitors[..].keys",
              "observers": Set {},
            },
            "name": "PredictionStore@1.matches[..].competitors[..]",
            "pendingKeys": Map {
              "$$typeof" => false,
              "nodeType" => false,
              "@@__IMMUTABLE_ITERABLE__@@" => false,
              "@@__IMMUTABLE_RECORD__@@" => false,
              "_isMockFunction" => false,
              "toJSON" => false,
            },
            "proxy": [Circular],
            "target": Object {
              "abbreviation": "TOT",
              "country": "England",
              "country_code": "ENG",
              "id": "sr:competitor:33",
              "name": "Tottenham Hotspur",
              "qualifier": "away",
              Symbol(mobx administration): [Circular],
            },
            "values": Map {
              "id" => "sr:competitor:33",
              "name" => "Tottenham Hotspur",
              "country" => "England",
              "country_code" => "ENG",
              "abbreviation" => "TOT",
              "qualifier" => "away",
            },
          },
        },
      ],
      "venue" => Object {
        "capacity": 52338,
        "city_name": "Newcastle upon Tyne",
        "country_code": "ENG",
        "country_name": "England",
        "id": "sr:venue:765",
        "map_coordinates": "54.975033,-1.615061",
        "name": "St James' Park",
        Symbol(mobx administration): ObservableObjectAdministration$$1 {
          "defaultEnhancer": [Function],
          "keysAtom": Atom$$1 {
            "diffValue": 0,
            "isBeingObserved": false,
            "isPendingUnobservation": false,
            "lastAccessedBy": 0,
            "lowestObserverState": 2,
            "name": "PredictionStore@1.matches[..].venue.keys",
            "observers": Set {},
          },
          "name": "PredictionStore@1.matches[..].venue",
          "pendingKeys": Map {
            "$$typeof" => false,
            "nodeType" => false,
            "@@__IMMUTABLE_ITERABLE__@@" => false,
            "@@__IMMUTABLE_RECORD__@@" => false,
            "_isMockFunction" => false,
            "toJSON" => false,
          },
          "proxy": [Circular],
          "target": Object {
            "capacity": 52338,
            "city_name": "Newcastle upon Tyne",
            "country_code": "ENG",
            "country_name": "England",
            "id": "sr:venue:765",
            "map_coordinates": "54.975033,-1.615061",
            "name": "St James' Park",
            Symbol(mobx administration): [Circular],
          },
          "values": Map {
            "id" => "sr:venue:765",
            "name" => "St James' Park",
            "capacity" => 52338,
            "city_name" => "Newcastle upon Tyne",
            "country_name" => "England",
            "map_coordinates" => "54.975033,-1.615061",
            "country_code" => "ENG",
          },
        },
      },
    },
  },
}
`;
